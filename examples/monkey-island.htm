<html>
    <head>
        <title>Trail - Examples</title>

        <!-- app -->
        <script type="text/javascript" src="js/trail.min.js"></script>

        <!-- css linkage -->
        <link rel="stylesheet" type="text/css" href="css/trail.css" />
    </head>
    <body>
    <h1>Trail.js Examples</h1>
    <h2>Monkey Island</h2>
    <p><b>Overview</b><br />Rough test of Triangulation in a Monkey Island scene. Results shown in Console.</p>
    <p><a href="/">... back to examples</a></p>
    <canvas id="canvas" width="640" height="480" style="border:1px solid">

    <!-- on ready -->
    <script type="text/javascript">
        window.onload = function()
        {
            console.log("Document* Ready");




            // TODO these 'should' be abstracted to a utility class in the examples/js folder
            // --- canvas helpers ---

            // canvas
            var ctx = document.getElementById('canvas').getContext('2d');

            // draw path
            function drawPolygon(poly, drawPoints)
            {
                var vertices = poly.getVertices();

                // draw poly
                ctx.fillStyle = "rgba(20, 20, 255, 0.5)";
                ctx.strokeStyle = '#ff0000';
                ctx.beginPath();
                ctx.moveTo(vertices[0].x, vertices[0].y);

                for(var i = 1; i < vertices.length; i++)
                {
                    ctx.lineTo(vertices[i].x, vertices[i].y);
                }

                ctx.closePath();
                ctx.fill();
                ctx.stroke();

                // draw vertices
                if(drawPoints)
                {
                    for(var i = 0; i < vertices.length; i++)
                    {
                        ctx.beginPath();
                        ctx.arc(vertices[i].x, vertices[i].y, 2, 0, 2 * Math.PI, false);
                        ctx.fillStyle = "rgba(0, 0, 255, 1)";
                        ctx.closePath();
                        ctx.fill();
                    }
                }
            }

            var canvas = document.getElementById('canvas');

            function getMousePos(canvas, evt) {
                var rect = canvas.getBoundingClientRect();
                return {
                    x: (evt.clientX - rect.left).toFixed(0),
                    y: (evt.clientY - rect.top).toFixed(0)
                };
            }

            canvas.addEventListener('mousedown', function(evt) {
                var mousePos = getMousePos(canvas, evt);
                var message = mousePos.x + ',' + mousePos.y + ", ";
                console.log(message);
            }, false);

            // -----------




            var img = new Image();
            img.onload = function()
            {
                ctx.drawImage(img, 0, 0);

                // init app
                TRAIL.sayHi();

                // create a poly
                var polygon = new TRAIL.Polygon([456,123, 490,128, 523,134, 526,141, 516,149, 469,157, 529,174, 516,180, 444,160, 409,167, 359,178, 319,201, 314,238, 322,259, 481,302, 526,321, 501,339, 457,341, 324,341, 4,342, 4,278, 88,275, 195,301, 294,310, 293,286, 282,268, 267,277, 145,233, 149,223, 189,233, 258,197, 296,179, 322,171, 357,161, 378,161, 418,153, 453,147, 489,145, 505,143, 508,135, 456,128]);
                var triangles = polygon.triangulate();

                // testing convex or cancave shape
                console.log("%c Monkey Island* ", "background: #ff1234; color: #ffffff");
                console.log("Navigation Mesh Generates " + triangles.length + " triangles");

                // render triangles
                for(var i = 0; i < triangles.length; i++) {
                    var triangle = triangles[i];
                    drawPolygon(triangle, true);
                }
            }
            img.src = "img/monkey21full.png";




        }
    </script>
    </body>
</html>