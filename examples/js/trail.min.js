(function(){"use strict";var t=this,e=e||{};e.sayHi=function(){console.log("%c trail.js* init \n","background: #ff1234; color: #ffffff")},e.Edge=function(t,n,r){var o=e.generateHash(t.x)+e.generateHash(t.y),i=e.generateHash(n.x)+e.generateHash(n.y),s=o+i;this.vertex1=t,this.vertex2=n,this.polygon1=r,this.polygon2=null,this.hash=s},e.Edge.prototype.getHash=function(){return this.hash},e.Edge.prototype.constructor=e.Edge,e.Mesh=function(){this.polygons=[]},e.Mesh.prototype.getPolygons=function(){return this.polygons},e.Mesh.prototype.getPolygon=function(t){return this.polygons[t]},e.Mesh.prototype.addPolygon=function(t){this.polygons.push(t)},e.Mesh.prototype.prepareGraph=function(){for(var t=[],n=[],r=[],o=0;o<this.polygons.length;o++)for(var i=this.polygons[o],t=i.getEdges(),s=0;s<t.length;s++){var a=t[s],h=a.getHash();void 0==r[h]?r[h]=[a]:r[h].push(a)}var y,u=[];for(y in r)if(r[y].length>1){r[y][0].polygon2=r[y][1].polygon1,r[y][1].polygon2=r[y][0].polygon1;var f,l=e.generateHash(r[y][0].polygon1.x)+e.generateHash(r[y][0].polygon1.y);if(void 0!=u[l])f=u[l];else{var g=r[y][0].polygon1.getCenter();f=new e.GraphNode(g.x,g.y),n.push(f)}var p,x=e.generateHash(r[y][1].polygon1.x)+e.generateHash(r[y][1].polygon1.y);if(void 0!=u[x])p=u[x];else{var c=r[y][1].polygon1.getCenter();p=new e.GraphNode(c.x,c.y),n.push(p)}f.connectedGraphNodes.push(p),p.connectedGraphNodes.push(f)}return n},e.Mesh.prototype.constructor=e.Mesh,e.Polygon=function(t){this.setVertices(t)},e.Polygon.prototype.setVertices=function(t){this.vertices=[],this.edges=[];for(var n=0;n<t.length;n+=2){var r=new e.Vertex(t[n],t[n+1]);this.vertices.push(r)}for(var n=0;n<this.vertices.length;n++){var o;o=n<this.vertices.length-1?new e.Edge(this.vertices[n],this.vertices[n+1],this):new e.Edge(this.vertices[n],this.vertices[0],this),this.edges.push(o)}},e.Polygon.prototype.getVertices=function(){return this.vertices},e.Polygon.prototype.getVertex=function(t){return this.vertices[t]},e.Polygon.prototype.getEdges=function(){return this.edges},e.Polygon.prototype.setVertex=function(t,e){this.vertices[t]=e},e.Polygon.prototype.getCenter=function(){for(var t,n,r,o=0,i=0,s=0,a=0,h=this.vertices.length-1;a<this.vertices.length;h=a++)t=this.vertices[a],n=this.vertices[h],r=t.x*n.y-n.x*t.y,o+=r,i+=(t.x+n.x)*r,s+=(t.y+n.y)*r;return r=3*o,new e.Vertex(i/r,s/r)},e.Polygon.prototype.constructor=e.Polygon,e.Vertex=function(t,e){this.x=t,this.y=e},e.Vertex.prototype.constructor=e.Vertex;var n={};n.IsSimple=function(t){var e=t.length>>1;if(4>e)return!0;for(var r=new n._P,o=new n._P,i=new n._P,s=new n._P,a=new n._P,h=0;e>h;h++){r.x=t[2*h],r.y=t[2*h+1],h==e-1?(o.x=t[0],o.y=t[1]):(o.x=t[2*h+2],o.y=t[2*h+3]);for(var y=0;e>y;y++)if(!(Math.abs(h-y)<2||y==e-1&&0==h||h==e-1&&0==y||(i.x=t[2*y],i.y=t[2*y+1],y==e-1?(s.x=t[0],s.y=t[1]):(s.x=t[2*y+2],s.y=t[2*y+3]),null==n._GetLineIntersection(r,o,i,s,a))))return!1}return!0},n.IsConvex=function(t){if(t.length<6)return!0;for(var e=t.length-4,r=0;e>r;r+=2)if(!n._convex(t[r],t[r+1],t[r+2],t[r+3],t[r+4],t[r+5]))return!1;return n._convex(t[e],t[e+1],t[e+2],t[e+3],t[0],t[1])?n._convex(t[e+2],t[e+3],t[0],t[1],t[2],t[3])?!0:!1:!1},n.GetArea=function(t){if(t.length<6)return 0;for(var e=t.length-2,n=0,r=0;e>r;r+=2)n+=(t[r+2]-t[r])*(t[r+1]+t[r+3]);return n+=(t[0]-t[e])*(t[e+1]+t[1]),.5*-n},n.GetAABB=function(t){for(var e=1/0,n=1/0,r=-e,o=-n,i=0;i<t.length;i+=2)e=Math.min(e,t[i]),r=Math.max(r,t[i]),n=Math.min(n,t[i+1]),o=Math.max(o,t[i+1]);return{x:e,y:n,width:r-e,height:o-n}},n.Reverse=function(t){for(var e=[],n=t.length-2;n>=0;n-=2)e.push(t[n],t[n+1]);return e},n.Triangulate=function(t){var e=t.length>>1;if(3>e)return[];for(var r=[],o=[],i=0;e>i;i++)o.push(i);for(var i=0,s=e;s>3;){var a=o[(i+0)%s],h=o[(i+1)%s],y=o[(i+2)%s],u=t[2*a],f=t[2*a+1],l=t[2*h],g=t[2*h+1],p=t[2*y],x=t[2*y+1],c=!1;if(n._convex(u,f,l,g,p,x)){c=!0;for(var v=0;s>v;v++){var d=o[v];if(d!=a&&d!=h&&d!=y&&n._PointInTriangle(t[2*d],t[2*d+1],u,f,l,g,p,x)){c=!1;break}}}if(c)r.push(a,h,y),o.splice((i+1)%s,1),s--,i=0;else if(i++>3*s)break}return r.push(o[0],o[1],o[2]),r},n.ContainsPoint=function(t,e,n){for(var r,o=t.length>>1,i=t[2*o-3]-n,s=t[2*o-2]-e,a=t[2*o-1]-n,h=0;o>h;h++)r=s,i=a,s=t[2*h]-e,a=t[2*h+1]-n,i!=a&&(lup=a>i);for(var y=0,h=0;o>h;h++)if(r=s,i=a,s=t[2*h]-e,a=t[2*h+1]-n,!(0>i&&0>a||i>0&&a>0||0>r&&0>s)){if(i==a&&Math.min(r,s)<=0)return!0;if(i!=a){var u=r+(s-r)*-i/(a-i);if(0==u)return!0;u>0&&y++,0==i&&lup&&a>i&&y--,0==i&&!lup&&i>a&&y--,lup=a>i}}return 1==(1&y)},n.Slice=function(t,e,r,o,i){if(n.ContainsPoint(t,e,r)||n.ContainsPoint(t,o,i))return[t.slice(0)];for(var s=new n._P(e,r),a=new n._P(o,i),h=[],y=[],u=0;u<t.length;u+=2)y.push(new n._P(t[u],t[u+1]));for(var u=0;u<y.length;u++){var f=new n._P(0,0);f=n._GetLineIntersection(s,a,y[u],y[(u+1)%y.length],f),f&&(f.flag=!0,h.push(f),y.splice(u+1,0,f),u++)}if(0==h.length)return[t.slice(0)];var l=function(t,e){return n._P.dist(s,t)-n._P.dist(s,e)};h.sort(l);for(var g=[],p=0;h.length>0;){var x=(y.length,h[0]),c=h[1],v=y.indexOf(x),d=y.indexOf(c),_=!1;if(n._firstWithFlag(y,v)==d?_=!0:(x=h[1],c=h[0],v=y.indexOf(x),d=y.indexOf(c),n._firstWithFlag(y,v)==d&&(_=!0)),_){p--;var P=n._getPoints(y,v,d);g.push(P),y=n._getPoints(y,d,v),x.flag=c.flag=!1,h.splice(0,2),0==h.length&&g.push(y)}else p++,h.reverse();if(p>1)break}for(var m=[],u=0;u<g.length;u++){for(var M=g[u],I=[],w=0;w<M.length;w++)I.push(M[w].x,M[w].y);m.push(I)}return m},n.Raycast=function(t,e,r,o,i,s){var a=t.length-2,h=n._tp,y=h[0],u=h[1],f=h[2],l=h[3],g=h[4];y.x=e,y.y=r,u.x=e+o,u.y=r+i,null==s&&(s={dist:0,edge:0,norm:{x:0,y:0},refl:{x:0,y:0}}),s.dist=1/0;for(var p=0;a>p;p+=2){f.x=t[p],f.y=t[p+1],l.x=t[p+2],l.y=t[p+3];var x=n._RayLineIntersection(y,u,f,l,g);x&&n._updateISC(o,i,y,f,l,g,p/2,s)}f.x=l.x,f.y=l.y,l.x=t[0],l.y=t[1];var x=n._RayLineIntersection(y,u,f,l,g);return x&&n._updateISC(o,i,y,f,l,g,t.length/2,s),1/0!=s.dist?s:null},n.ClosestEdge=function(t,e,r,o){{var i=t.length-2,s=n._tp,a=s[0],h=s[2],y=s[3];s[4]}a.x=e,a.y=r,null==o&&(o={dist:0,edge:0,point:{x:0,y:0},norm:{x:0,y:0}}),o.dist=1/0;for(var u=0;i>u;u+=2)h.x=t[u],h.y=t[u+1],y.x=t[u+2],y.y=t[u+3],n._pointLineDist(a,h,y,u>>1,o);h.x=y.x,h.y=y.y,y.x=t[0],y.y=t[1],n._pointLineDist(a,h,y,i>>1,o);var f=1/o.dist;return o.norm.x=(e-o.point.x)*f,o.norm.y=(r-o.point.y)*f,o},n._pointLineDist=function(t,e,n,r,o){var i,s,a=t.x,h=t.y,y=e.x,u=e.y,f=n.x,l=n.y,g=a-y,p=h-u,x=f-y,c=l-u,v=g*x+p*c,d=x*x+c*c,_=v/d;0>_||y==f&&u==l?(i=y,s=u):_>1?(i=f,s=l):(i=y+_*x,s=u+_*c);var P=a-i,m=h-s,M=Math.sqrt(P*P+m*m);M<o.dist&&(o.dist=M,o.edge=r,o.point.x=i,o.point.y=s)},n._updateISC=function(t,e,r,o,i,s,a,h){var y=n._P.dist(r,s);if(y<h.dist){var u=1/n._P.dist(o,i),f=-(i.y-o.y)*u,l=(i.x-o.x)*u,g=2*(t*f+e*l);h.dist=y,h.norm.x=f,h.norm.y=l,h.refl.x=-g*f+t,h.refl.y=-g*l+e,h.edge=a}},n._getPoints=function(t,e,n){var r=t.length,o=[];e>n&&(n+=r);for(var i=e;n>=i;i++)o.push(t[i%r]);return o},n._firstWithFlag=function(t,e){for(var n=t.length;;)if(e=(e+1)%n,t[e].flag)return e},n._PointInTriangle=function(t,e,n,r,o,i,s,a){var h=s-n,y=a-r,u=o-n,f=i-r,l=t-n,g=e-r,p=h*h+y*y,x=h*u+y*f,c=h*l+y*g,v=u*u+f*f,d=u*l+f*g,_=1/(p*v-x*x),P=(v*c-x*d)*_,m=(p*d-x*c)*_;return P>=0&&m>=0&&1>P+m},n._RayLineIntersection=function(t,e,r,o,i){var s=t.x-e.x,a=r.x-o.x,h=t.y-e.y,y=r.y-o.y,u=s*y-h*a;if(0==u)return null;var f=t.x*e.y-t.y*e.x,l=r.x*o.y-r.y*o.x,g=i,p=1/u;return g.x=(f*a-s*l)*p,g.y=(f*y-h*l)*p,n._InRect(g,r,o)?h>0&&g.y>t.y||0>h&&g.y<t.y?null:s>0&&g.x>t.x||0>s&&g.x<t.x?null:g:null},n._GetLineIntersection=function(t,e,r,o,i){var s=t.x-e.x,a=r.x-o.x,h=t.y-e.y,y=r.y-o.y,u=s*y-h*a;if(0==u)return null;var f=t.x*e.y-t.y*e.x,l=r.x*o.y-r.y*o.x,g=i;return g.x=(f*a-s*l)/u,g.y=(f*y-h*l)/u,n._InRect(g,t,e)&&n._InRect(g,r,o)?g:null},n._InRect=function(t,e,n){return e.x==n.x?t.y>=Math.min(e.y,n.y)&&t.y<=Math.max(e.y,n.y):e.y==n.y?t.x>=Math.min(e.x,n.x)&&t.x<=Math.max(e.x,n.x):t.x>=Math.min(e.x,n.x)&&t.x<=Math.max(e.x,n.x)&&t.y>=Math.min(e.y,n.y)&&t.y<=Math.max(e.y,n.y)?!0:!1},n._convex=function(t,e,n,r,o,i){return(e-r)*(o-n)+(n-t)*(i-r)>=0},n._P=function(t,e){this.x=t,this.y=e,this.flag=!1},n._P.prototype.toString=function(){return"Point ["+this.x+", "+this.y+"]"},n._P.dist=function(t,e){var n=e.x-t.x,r=e.y-t.y;return Math.sqrt(n*n+r*r)},n._tp=[];for(var r=0;10>r;r++)n._tp.push(new n._P(0,0));e.Graph=function(){},e.Graph.prototype.constructor=e.Graph,e.GraphNode=function(t,e){this.x=t,this.y=e,this.connectedGraphNodes=[]},e.GraphNode.prototype.constructor=e.GraphNode,e.verticesFromPolygon=function(t){for(var e=t.getVertices(),n=[],r=0;r<e.length;r++){var o=e[r];n.push(o.x,o.y)}return n},e.trianglesFromVertexArray=function(t){for(var n=[],r=0;r<t.length/6;r+=6){new e.Polygon([r,r+1,r+2,r+3,r+4,r+5])}return n},e.generateHash=function(t){return t=61^t^t>>16,t+=t<<3,t^=t>>4,t*=668265261,t^=t>>15},"undefined"!=typeof exports?("undefined"!=typeof module&&module.exports&&(exports=module.exports=e),exports.TRAIL=e):"undefined"!=typeof define&&define.amd?define(e):t.TRAIL=e}).call(this);