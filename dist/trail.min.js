(function(){"use strict";var t=this,n=n||{};n.sayHi=function(){console.log("%c trail.js* init \n","background: #ff1234; color: #ffffff")},n.Mesh=function(){this.polygons=[],this.edges=[]},n.Mesh.prototype.getPolygons=function(){return this.polygons},n.Mesh.prototype.getPolygon=function(t){return this.polygons[t]},n.Mesh.prototype.addPolygon=function(t){this.polygons.push(t)},n.Mesh.prototype.weldPoints=function(t,n){n=t},n.Mesh.prototype.constructor=n.Mesh,n.Point=function(t,n){this.x=t,this.y=n},n.Point.prototype.constructor=n.Point,n.Polygon=function(){this.vertices=[]},n.Polygon.prototype.getVertices=function(){return this.vertices},n.Polygon.prototype.getPoints=function(){return this.vertices},n.Polygon.prototype.getPoint=function(t){return this.vertices[t]},n.Polygon.prototype.setPoint=function(t,n){this.vertices[t]=n},n.Polygon.prototype.setVertices=function(t){this.vertices=[];for(var e=0;e<t.length;e+=2){var r=new n.Point(t[e],t[e+1]);this.vertices.push(r)}},n.Polygon.prototype.constructor=n.Polygon;var e={};e.IsSimple=function(t){var n=t.length>>1;if(4>n)return!0;for(var r=new e._P,o=new e._P,i=new e._P,s=new e._P,u=new e._P,f=0;n>f;f++){r.x=t[2*f],r.y=t[2*f+1],f==n-1?(o.x=t[0],o.y=t[1]):(o.x=t[2*f+2],o.y=t[2*f+3]);for(var y=0;n>y;y++)if(!(Math.abs(f-y)<2||y==n-1&&0==f||f==n-1&&0==y||(i.x=t[2*y],i.y=t[2*y+1],y==n-1?(s.x=t[0],s.y=t[1]):(s.x=t[2*y+2],s.y=t[2*y+3]),null==e._GetLineIntersection(r,o,i,s,u))))return!1}return!0},e.IsConvex=function(t){if(t.length<6)return!0;for(var n=t.length-4,r=0;n>r;r+=2)if(!e._convex(t[r],t[r+1],t[r+2],t[r+3],t[r+4],t[r+5]))return!1;return e._convex(t[n],t[n+1],t[n+2],t[n+3],t[0],t[1])&&e._convex(t[n+2],t[n+3],t[0],t[1],t[2],t[3])?!0:!1},e.GetArea=function(t){if(t.length<6)return 0;for(var n=t.length-2,e=0,r=0;n>r;r+=2)e+=(t[r+2]-t[r])*(t[r+1]+t[r+3]);return e+=(t[0]-t[n])*(t[n+1]+t[1]),.5*-e},e.GetAABB=function(t){for(var n=1/0,e=1/0,r=-n,o=-e,i=0;i<t.length;i+=2)n=Math.min(n,t[i]),r=Math.max(r,t[i]),e=Math.min(e,t[i+1]),o=Math.max(o,t[i+1]);return{x:n,y:e,width:r-n,height:o-e}},e.Reverse=function(t){for(var n=[],e=t.length-2;e>=0;e-=2)n.push(t[e],t[e+1]);return n},e.Triangulate=function(t){var n=t.length>>1;if(3>n)return[];for(var r=[],o=[],i=0;n>i;i++)o.push(i);for(var i=0,s=n;s>3;){var u=o[(i+0)%s],f=o[(i+1)%s],y=o[(i+2)%s],a=t[2*u],l=t[2*u+1],x=t[2*f],h=t[2*f+1],c=t[2*y],p=t[2*y+1],g=!1;if(e._convex(a,l,x,h,c,p)){g=!0;for(var v=0;s>v;v++){var _=o[v];if(_!=u&&_!=f&&_!=y&&e._PointInTriangle(t[2*_],t[2*_+1],a,l,x,h,c,p)){g=!1;break}}}if(g)r.push(u,f,y),o.splice((i+1)%s,1),s--,i=0;else if(i++>3*s)break}return r.push(o[0],o[1],o[2]),r},e.ContainsPoint=function(t,n,e){for(var r,o=t.length>>1,i=t[2*o-3]-e,s=t[2*o-2]-n,u=t[2*o-1]-e,f=0;o>f;f++)r=s,i=u,s=t[2*f]-n,u=t[2*f+1]-e,i!=u&&(lup=u>i);for(var y=0,f=0;o>f;f++)if(r=s,i=u,s=t[2*f]-n,u=t[2*f+1]-e,!(0>i&&0>u||i>0&&u>0||0>r&&0>s)){if(i==u&&Math.min(r,s)<=0)return!0;if(i!=u){var a=r+(s-r)*-i/(u-i);if(0==a)return!0;a>0&&y++,0==i&&lup&&u>i&&y--,0==i&&!lup&&i>u&&y--,lup=u>i}}return 1==(1&y)},e.Slice=function(t,n,r,o,i){if(e.ContainsPoint(t,n,r)||e.ContainsPoint(t,o,i))return[t.slice(0)];for(var s=new e._P(n,r),u=new e._P(o,i),f=[],y=[],a=0;a<t.length;a+=2)y.push(new e._P(t[a],t[a+1]));for(var a=0;a<y.length;a++){var l=new e._P(0,0);l=e._GetLineIntersection(s,u,y[a],y[(a+1)%y.length],l),l&&(l.flag=!0,f.push(l),y.splice(a+1,0,l),a++)}if(0==f.length)return[t.slice(0)];var x=function(t,n){return e._P.dist(s,t)-e._P.dist(s,n)};f.sort(x);for(var h=[],c=0;f.length>0;){var p=(y.length,f[0]),g=f[1],v=y.indexOf(p),_=y.indexOf(g),P=!1;if(e._firstWithFlag(y,v)==_?P=!0:(p=f[1],g=f[0],v=y.indexOf(p),_=y.indexOf(g),e._firstWithFlag(y,v)==_&&(P=!0)),P){c--;var d=e._getPoints(y,v,_);h.push(d),y=e._getPoints(y,_,v),p.flag=g.flag=!1,f.splice(0,2),0==f.length&&h.push(y)}else c++,f.reverse();if(c>1)break}for(var m=[],a=0;a<h.length;a++){for(var M=h[a],I=[],w=0;w<M.length;w++)I.push(M[w].x,M[w].y);m.push(I)}return m},e.Raycast=function(t,n,r,o,i,s){var u=t.length-2,f=e._tp,y=f[0],a=f[1],l=f[2],x=f[3],h=f[4];y.x=n,y.y=r,a.x=n+o,a.y=r+i,null==s&&(s={dist:0,edge:0,norm:{x:0,y:0},refl:{x:0,y:0}}),s.dist=1/0;for(var c=0;u>c;c+=2){l.x=t[c],l.y=t[c+1],x.x=t[c+2],x.y=t[c+3];var p=e._RayLineIntersection(y,a,l,x,h);p&&e._updateISC(o,i,y,l,x,h,c/2,s)}l.x=x.x,l.y=x.y,x.x=t[0],x.y=t[1];var p=e._RayLineIntersection(y,a,l,x,h);return p&&e._updateISC(o,i,y,l,x,h,t.length/2,s),1/0!=s.dist?s:null},e.ClosestEdge=function(t,n,r,o){{var i=t.length-2,s=e._tp,u=s[0],f=s[2],y=s[3];s[4]}u.x=n,u.y=r,null==o&&(o={dist:0,edge:0,point:{x:0,y:0},norm:{x:0,y:0}}),o.dist=1/0;for(var a=0;i>a;a+=2)f.x=t[a],f.y=t[a+1],y.x=t[a+2],y.y=t[a+3],e._pointLineDist(u,f,y,a>>1,o);f.x=y.x,f.y=y.y,y.x=t[0],y.y=t[1],e._pointLineDist(u,f,y,i>>1,o);var l=1/o.dist;return o.norm.x=(n-o.point.x)*l,o.norm.y=(r-o.point.y)*l,o},e._pointLineDist=function(t,n,e,r,o){var i,s,u=t.x,f=t.y,y=n.x,a=n.y,l=e.x,x=e.y,h=u-y,c=f-a,p=l-y,g=x-a,v=h*p+c*g,_=p*p+g*g,P=v/_;0>P||y==l&&a==x?(i=y,s=a):P>1?(i=l,s=x):(i=y+P*p,s=a+P*g);var d=u-i,m=f-s,M=Math.sqrt(d*d+m*m);M<o.dist&&(o.dist=M,o.edge=r,o.point.x=i,o.point.y=s)},e._updateISC=function(t,n,r,o,i,s,u,f){var y=e._P.dist(r,s);if(y<f.dist){var a=1/e._P.dist(o,i),l=-(i.y-o.y)*a,x=(i.x-o.x)*a,h=2*(t*l+n*x);f.dist=y,f.norm.x=l,f.norm.y=x,f.refl.x=-h*l+t,f.refl.y=-h*x+n,f.edge=u}},e._getPoints=function(t,n,e){var r=t.length,o=[];n>e&&(e+=r);for(var i=n;e>=i;i++)o.push(t[i%r]);return o},e._firstWithFlag=function(t,n){for(var e=t.length;;)if(n=(n+1)%e,t[n].flag)return n},e._PointInTriangle=function(t,n,e,r,o,i,s,u){var f=s-e,y=u-r,a=o-e,l=i-r,x=t-e,h=n-r,c=f*f+y*y,p=f*a+y*l,g=f*x+y*h,v=a*a+l*l,_=a*x+l*h,P=1/(c*v-p*p),d=(v*g-p*_)*P,m=(c*_-p*g)*P;return d>=0&&m>=0&&1>d+m},e._RayLineIntersection=function(t,n,r,o,i){var s=t.x-n.x,u=r.x-o.x,f=t.y-n.y,y=r.y-o.y,a=s*y-f*u;if(0==a)return null;var l=t.x*n.y-t.y*n.x,x=r.x*o.y-r.y*o.x,h=i,c=1/a;return h.x=(l*u-s*x)*c,h.y=(l*y-f*x)*c,e._InRect(h,r,o)?f>0&&h.y>t.y||0>f&&h.y<t.y?null:s>0&&h.x>t.x||0>s&&h.x<t.x?null:h:null},e._GetLineIntersection=function(t,n,r,o,i){var s=t.x-n.x,u=r.x-o.x,f=t.y-n.y,y=r.y-o.y,a=s*y-f*u;if(0==a)return null;var l=t.x*n.y-t.y*n.x,x=r.x*o.y-r.y*o.x,h=i;return h.x=(l*u-s*x)/a,h.y=(l*y-f*x)/a,e._InRect(h,t,n)&&e._InRect(h,r,o)?h:null},e._InRect=function(t,n,e){return n.x==e.x?t.y>=Math.min(n.y,e.y)&&t.y<=Math.max(n.y,e.y):n.y==e.y?t.x>=Math.min(n.x,e.x)&&t.x<=Math.max(n.x,e.x):t.x>=Math.min(n.x,e.x)&&t.x<=Math.max(n.x,e.x)&&t.y>=Math.min(n.y,e.y)&&t.y<=Math.max(n.y,e.y)?!0:!1},e._convex=function(t,n,e,r,o,i){return(n-r)*(o-e)+(e-t)*(i-r)>=0},e._P=function(t,n){this.x=t,this.y=n,this.flag=!1},e._P.prototype.toString=function(){return"Point ["+this.x+", "+this.y+"]"},e._P.dist=function(t,n){var e=n.x-t.x,r=n.y-t.y;return Math.sqrt(e*e+r*r)},e._tp=[];for(var r=0;10>r;r++)e._tp.push(new e._P(0,0));n.verticesFromPolygon=function(t){for(var n=t.getVertices(),e=[],r=0;r<n.length;r++){var o=n[r];e.push(o.x,o.y)}return e},n.trianglesFromVertexArray=function(t){for(var e=[],r=0;r<t.length/6;r+=6){new n.Polygon([r,r+1,r+2,r+3,r+4,r+5])}return e},"undefined"!=typeof exports?("undefined"!=typeof module&&module.exports&&(exports=module.exports=n),exports.TRAIL=n):"undefined"!=typeof define&&define.amd?define(n):t.TRAIL=n}).call(this);