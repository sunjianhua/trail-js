(function(){"use strict";var n=this,t=t||{};t.sayHi=function(){console.log("%c trail* init ","background: #ff1234; color: #ffffff")},t.Point=function(n,t){this.x=n,this.y=t},t.Point.prototype.constructor=t.Point,t.Polygon=function(n){this.vertices=[];for(var e=0;e<n.length;e+=2)this.vertices.push(new t.Point(n[e],n[e+1]))},t.Polygon.prototype.getVertices=function(){return this.vertices},t.Polygon.prototype.isSimple=function(){return e.IsSimple(this.vertices)},t.Polygon.prototype.constructor=t.Polygon;var e={};e.IsSimple=function(n){console.log("len: "+n.length);var t=n.length>>1;if(console.log("n: "+t),4>t)return!0;console.log("len: "+n.length);for(var r=new e._P,i=new e._P,o=new e._P,f=new e._P,a=new e._P,u=0;t>u;u++){r.x=n[2*u],r.y=n[2*u+1],u==t-1?(i.x=n[0],i.y=n[1]):(i.x=n[2*u+2],i.y=n[2*u+3]);for(var l=0;t>l;l++)if(!(Math.abs(u-l)<2||l==t-1&&0==u||u==t-1&&0==l||(o.x=n[2*l],o.y=n[2*l+1],l==t-1?(f.x=n[0],f.y=n[1]):(f.x=n[2*l+2],f.y=n[2*l+3]),null==e._GetLineIntersection(r,i,o,f,a))))return!1}return!0},e.IsConvex=function(n){if(n.length<6)return!0;for(var t=n.length-4,r=0;t>r;r+=2)if(!e._convex(n[r],n[r+1],n[r+2],n[r+3],n[r+4],n[r+5]))return!1;return e._convex(n[t],n[t+1],n[t+2],n[t+3],n[0],n[1])?e._convex(n[t+2],n[t+3],n[0],n[1],n[2],n[3])?!0:!1:!1},e.GetArea=function(n){if(n.length<6)return 0;for(var t=n.length-2,e=0,r=0;t>r;r+=2)e+=(n[r+2]-n[r])*(n[r+1]+n[r+3]);return e+=(n[0]-n[t])*(n[t+1]+n[1]),.5*-e},e.GetAABB=function(n){for(var t=1/0,e=1/0,r=-t,i=-e,o=0;o<n.length;o+=2)t=Math.min(t,n[o]),r=Math.max(r,n[o]),e=Math.min(e,n[o+1]),i=Math.max(i,n[o+1]);return{x:t,y:e,width:r-t,height:i-e}},e.Reverse=function(n){for(var t=[],e=n.length-2;e>=0;e-=2)t.push(n[e],n[e+1]);return t},e.Triangulate=function(n){var t=n.length>>1;if(3>t)return[];for(var r=[],i=[],o=0;t>o;o++)i.push(o);for(var o=0,f=t;f>3;){var a=i[(o+0)%f],u=i[(o+1)%f],l=i[(o+2)%f],s=n[2*a],x=n[2*a+1],y=n[2*u],h=n[2*u+1],c=n[2*l],v=n[2*l+1],g=!1;if(e._convex(s,x,y,h,c,v)){g=!0;for(var p=0;f>p;p++){var _=i[p];if(_!=a&&_!=u&&_!=l&&e._PointInTriangle(n[2*_],n[2*_+1],s,x,y,h,c,v)){g=!1;break}}}if(g)r.push(a,u,l),i.splice((o+1)%f,1),f--,o=0;else if(o++>3*f)break}return r.push(i[0],i[1],i[2]),r},e.ContainsPoint=function(n,t,e){for(var r,i=n.length>>1,o=n[2*i-3]-e,f=n[2*i-2]-t,a=n[2*i-1]-e,u=0;i>u;u++)r=f,o=a,f=n[2*u]-t,a=n[2*u+1]-e,o!=a&&(lup=a>o);for(var l=0,u=0;i>u;u++)if(r=f,o=a,f=n[2*u]-t,a=n[2*u+1]-e,!(0>o&&0>a||o>0&&a>0||0>r&&0>f)){if(o==a&&Math.min(r,f)<=0)return!0;if(o!=a){var s=r+(f-r)*-o/(a-o);if(0==s)return!0;s>0&&l++,0==o&&lup&&a>o&&l--,0==o&&!lup&&o>a&&l--,lup=a>o}}return 1==(1&l)},e.Slice=function(n,t,r,i,o){if(e.ContainsPoint(n,t,r)||e.ContainsPoint(n,i,o))return[n.slice(0)];for(var f=new e._P(t,r),a=new e._P(i,o),u=[],l=[],s=0;s<n.length;s+=2)l.push(new e._P(n[s],n[s+1]));for(var s=0;s<l.length;s++){var x=new e._P(0,0);x=e._GetLineIntersection(f,a,l[s],l[(s+1)%l.length],x),x&&(x.flag=!0,u.push(x),l.splice(s+1,0,x),s++)}if(0==u.length)return[n.slice(0)];var y=function(n,t){return e._P.dist(f,n)-e._P.dist(f,t)};u.sort(y);for(var h=[],c=0;u.length>0;){var v=(l.length,u[0]),g=u[1],p=l.indexOf(v),_=l.indexOf(g),d=!1;if(e._firstWithFlag(l,p)==_?d=!0:(v=u[1],g=u[0],p=l.indexOf(v),_=l.indexOf(g),e._firstWithFlag(l,p)==_&&(d=!0)),d){c--;var P=e._getPoints(l,p,_);h.push(P),l=e._getPoints(l,_,p),v.flag=g.flag=!1,u.splice(0,2),0==u.length&&h.push(l)}else c++,u.reverse();if(c>1)break}for(var m=[],s=0;s<h.length;s++){for(var I=h[s],M=[],w=0;w<I.length;w++)M.push(I[w].x,I[w].y);m.push(M)}return m},e.Raycast=function(n,t,r,i,o,f){var a=n.length-2,u=e._tp,l=u[0],s=u[1],x=u[2],y=u[3],h=u[4];l.x=t,l.y=r,s.x=t+i,s.y=r+o,null==f&&(f={dist:0,edge:0,norm:{x:0,y:0},refl:{x:0,y:0}}),f.dist=1/0;for(var c=0;a>c;c+=2){x.x=n[c],x.y=n[c+1],y.x=n[c+2],y.y=n[c+3];var v=e._RayLineIntersection(l,s,x,y,h);v&&e._updateISC(i,o,l,x,y,h,c/2,f)}x.x=y.x,x.y=y.y,y.x=n[0],y.y=n[1];var v=e._RayLineIntersection(l,s,x,y,h);return v&&e._updateISC(i,o,l,x,y,h,n.length/2,f),1/0!=f.dist?f:null},e.ClosestEdge=function(n,t,r,i){{var o=n.length-2,f=e._tp,a=f[0],u=f[2],l=f[3];f[4]}a.x=t,a.y=r,null==i&&(i={dist:0,edge:0,point:{x:0,y:0},norm:{x:0,y:0}}),i.dist=1/0;for(var s=0;o>s;s+=2)u.x=n[s],u.y=n[s+1],l.x=n[s+2],l.y=n[s+3],e._pointLineDist(a,u,l,s>>1,i);u.x=l.x,u.y=l.y,l.x=n[0],l.y=n[1],e._pointLineDist(a,u,l,o>>1,i);var x=1/i.dist;return i.norm.x=(t-i.point.x)*x,i.norm.y=(r-i.point.y)*x,i},e._pointLineDist=function(n,t,e,r,i){var o,f,a=n.x,u=n.y,l=t.x,s=t.y,x=e.x,y=e.y,h=a-l,c=u-s,v=x-l,g=y-s,p=h*v+c*g,_=v*v+g*g,d=p/_;0>d||l==x&&s==y?(o=l,f=s):d>1?(o=x,f=y):(o=l+d*v,f=s+d*g);var P=a-o,m=u-f,I=Math.sqrt(P*P+m*m);I<i.dist&&(i.dist=I,i.edge=r,i.point.x=o,i.point.y=f)},e._updateISC=function(n,t,r,i,o,f,a,u){var l=e._P.dist(r,f);if(l<u.dist){var s=1/e._P.dist(i,o),x=-(o.y-i.y)*s,y=(o.x-i.x)*s,h=2*(n*x+t*y);u.dist=l,u.norm.x=x,u.norm.y=y,u.refl.x=-h*x+n,u.refl.y=-h*y+t,u.edge=a}},e._getPoints=function(n,t,e){var r=n.length,i=[];t>e&&(e+=r);for(var o=t;e>=o;o++)i.push(n[o%r]);return i},e._firstWithFlag=function(n,t){for(var e=n.length;;)if(t=(t+1)%e,n[t].flag)return t},e._PointInTriangle=function(n,t,e,r,i,o,f,a){var u=f-e,l=a-r,s=i-e,x=o-r,y=n-e,h=t-r,c=u*u+l*l,v=u*s+l*x,g=u*y+l*h,p=s*s+x*x,_=s*y+x*h,d=1/(c*p-v*v),P=(p*g-v*_)*d,m=(c*_-v*g)*d;return P>=0&&m>=0&&1>P+m},e._RayLineIntersection=function(n,t,r,i,o){var f=n.x-t.x,a=r.x-i.x,u=n.y-t.y,l=r.y-i.y,s=f*l-u*a;if(0==s)return null;var x=n.x*t.y-n.y*t.x,y=r.x*i.y-r.y*i.x,h=o,c=1/s;return h.x=(x*a-f*y)*c,h.y=(x*l-u*y)*c,e._InRect(h,r,i)?u>0&&h.y>n.y||0>u&&h.y<n.y?null:f>0&&h.x>n.x||0>f&&h.x<n.x?null:h:null},e._GetLineIntersection=function(n,t,r,i,o){var f=n.x-t.x,a=r.x-i.x,u=n.y-t.y,l=r.y-i.y,s=f*l-u*a;if(0==s)return null;var x=n.x*t.y-n.y*t.x,y=r.x*i.y-r.y*i.x,h=o;return h.x=(x*a-f*y)/s,h.y=(x*l-u*y)/s,e._InRect(h,n,t)&&e._InRect(h,r,i)?h:null},e._InRect=function(n,t,e){return t.x==e.x?n.y>=Math.min(t.y,e.y)&&n.y<=Math.max(t.y,e.y):t.y==e.y?n.x>=Math.min(t.x,e.x)&&n.x<=Math.max(t.x,e.x):n.x>=Math.min(t.x,e.x)&&n.x<=Math.max(t.x,e.x)&&n.y>=Math.min(t.y,e.y)&&n.y<=Math.max(t.y,e.y)?!0:!1},e._convex=function(n,t,e,r,i,o){return(t-r)*(i-e)+(e-n)*(o-r)>=0},e._P=function(n,t){this.x=n,this.y=t,this.flag=!1},e._P.prototype.toString=function(){return"Point ["+this.x+", "+this.y+"]"},e._P.dist=function(n,t){var e=t.x-n.x,r=t.y-n.y;return Math.sqrt(e*e+r*r)},e._tp=[];for(var r=0;10>r;r++)e._tp.push(new e._P(0,0));"undefined"!=typeof exports?("undefined"!=typeof module&&module.exports&&(exports=module.exports=t),exports.TRAIL=t):"undefined"!=typeof define&&define.amd?define(t):n.TRAIL=t}).call(this);