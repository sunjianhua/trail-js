(function(){"use strict";var n=this,t=t||{};t.sayHi=function(){console.log("%c trail.js* init \n","background: #ff1234; color: #ffffff")},t.Point=function(n,t){this.x=n,this.y=t},t.Point.prototype.constructor=t.Point,t.Polygon=function(n){this.vertices=[];for(var r=0;r<n.length;r+=2)this.vertices.push(new t.Point(n[r],n[r+1]))},t.Polygon.prototype.getVertices=function(){return this.vertices},t.Polygon.prototype.isSimple=function(){var n=t.verticesFromPolygon(this);return r.IsSimple(n)},t.Polygon.prototype.isConvex=function(){var n=t.verticesFromPolygon(this);return r.IsConvex(n)},t.Polygon.prototype.triangulate=function(){var n=t.verticesFromPolygon(this),e=r.Triangulate(n);console.log("return: "+e);for(var i=[],o=0;o<e.length;o++){console.log(n[e[o]],n[e[o+1]],n[e[o+2]],n[e[o+3]],n[e[o+4]],n[e[o+5]]);var a=new t.Polygon([n[e[o]],n[e[o+1]],n[e[o+2]],n[e[o+3]],n[e[o+4]],n[e[o+5]]]);i.push(a)}return i},t.Polygon.prototype.constructor=t.Polygon;var r={};r.IsSimple=function(n){var t=n.length>>1;if(4>t)return!0;for(var e=new r._P,i=new r._P,o=new r._P,a=new r._P,u=new r._P,f=0;t>f;f++){e.x=n[2*f],e.y=n[2*f+1],f==t-1?(i.x=n[0],i.y=n[1]):(i.x=n[2*f+2],i.y=n[2*f+3]);for(var s=0;t>s;s++)if(!(Math.abs(f-s)<2||s==t-1&&0==f||f==t-1&&0==s||(o.x=n[2*s],o.y=n[2*s+1],s==t-1?(a.x=n[0],a.y=n[1]):(a.x=n[2*s+2],a.y=n[2*s+3]),null==r._GetLineIntersection(e,i,o,a,u))))return!1}return!0},r.IsConvex=function(n){if(n.length<6)return!0;for(var t=n.length-4,e=0;t>e;e+=2)if(!r._convex(n[e],n[e+1],n[e+2],n[e+3],n[e+4],n[e+5]))return!1;return r._convex(n[t],n[t+1],n[t+2],n[t+3],n[0],n[1])&&r._convex(n[t+2],n[t+3],n[0],n[1],n[2],n[3])?!0:!1},r.GetArea=function(n){if(n.length<6)return 0;for(var t=n.length-2,r=0,e=0;t>e;e+=2)r+=(n[e+2]-n[e])*(n[e+1]+n[e+3]);return r+=(n[0]-n[t])*(n[t+1]+n[1]),.5*-r},r.GetAABB=function(n){for(var t=1/0,r=1/0,e=-t,i=-r,o=0;o<n.length;o+=2)t=Math.min(t,n[o]),e=Math.max(e,n[o]),r=Math.min(r,n[o+1]),i=Math.max(i,n[o+1]);return{x:t,y:r,width:e-t,height:i-r}},r.Reverse=function(n){for(var t=[],r=n.length-2;r>=0;r-=2)t.push(n[r],n[r+1]);return t},r.Triangulate=function(n){var t=n.length>>1;if(3>t)return[];for(var e=[],i=[],o=0;t>o;o++)i.push(o);for(var o=0,a=t;a>3;){var u=i[(o+0)%a],f=i[(o+1)%a],s=i[(o+2)%a],l=n[2*u],y=n[2*u+1],x=n[2*f],h=n[2*f+1],c=n[2*s],v=n[2*s+1],g=!1;if(r._convex(l,y,x,h,c,v)){g=!0;for(var p=0;a>p;p++){var _=i[p];if(_!=u&&_!=f&&_!=s&&r._PointInTriangle(n[2*_],n[2*_+1],l,y,x,h,c,v)){g=!1;break}}}if(g)e.push(u,f,s),i.splice((o+1)%a,1),a--,o=0;else if(o++>3*a)break}return e.push(i[0],i[1],i[2]),e},r.ContainsPoint=function(n,t,r){for(var e,i=n.length>>1,o=n[2*i-3]-r,a=n[2*i-2]-t,u=n[2*i-1]-r,f=0;i>f;f++)e=a,o=u,a=n[2*f]-t,u=n[2*f+1]-r,o!=u&&(lup=u>o);for(var s=0,f=0;i>f;f++)if(e=a,o=u,a=n[2*f]-t,u=n[2*f+1]-r,!(0>o&&0>u||o>0&&u>0||0>e&&0>a)){if(o==u&&Math.min(e,a)<=0)return!0;if(o!=u){var l=e+(a-e)*-o/(u-o);if(0==l)return!0;l>0&&s++,0==o&&lup&&u>o&&s--,0==o&&!lup&&o>u&&s--,lup=u>o}}return 1==(1&s)},r.Slice=function(n,t,e,i,o){if(r.ContainsPoint(n,t,e)||r.ContainsPoint(n,i,o))return[n.slice(0)];for(var a=new r._P(t,e),u=new r._P(i,o),f=[],s=[],l=0;l<n.length;l+=2)s.push(new r._P(n[l],n[l+1]));for(var l=0;l<s.length;l++){var y=new r._P(0,0);y=r._GetLineIntersection(a,u,s[l],s[(l+1)%s.length],y),y&&(y.flag=!0,f.push(y),s.splice(l+1,0,y),l++)}if(0==f.length)return[n.slice(0)];var x=function(n,t){return r._P.dist(a,n)-r._P.dist(a,t)};f.sort(x);for(var h=[],c=0;f.length>0;){var v=(s.length,f[0]),g=f[1],p=s.indexOf(v),_=s.indexOf(g),P=!1;if(r._firstWithFlag(s,p)==_?P=!0:(v=f[1],g=f[0],p=s.indexOf(v),_=s.indexOf(g),r._firstWithFlag(s,p)==_&&(P=!0)),P){c--;var d=r._getPoints(s,p,_);h.push(d),s=r._getPoints(s,_,p),v.flag=g.flag=!1,f.splice(0,2),0==f.length&&h.push(s)}else c++,f.reverse();if(c>1)break}for(var m=[],l=0;l<h.length;l++){for(var I=h[l],M=[],w=0;w<I.length;w++)M.push(I[w].x,I[w].y);m.push(M)}return m},r.Raycast=function(n,t,e,i,o,a){var u=n.length-2,f=r._tp,s=f[0],l=f[1],y=f[2],x=f[3],h=f[4];s.x=t,s.y=e,l.x=t+i,l.y=e+o,null==a&&(a={dist:0,edge:0,norm:{x:0,y:0},refl:{x:0,y:0}}),a.dist=1/0;for(var c=0;u>c;c+=2){y.x=n[c],y.y=n[c+1],x.x=n[c+2],x.y=n[c+3];var v=r._RayLineIntersection(s,l,y,x,h);v&&r._updateISC(i,o,s,y,x,h,c/2,a)}y.x=x.x,y.y=x.y,x.x=n[0],x.y=n[1];var v=r._RayLineIntersection(s,l,y,x,h);return v&&r._updateISC(i,o,s,y,x,h,n.length/2,a),1/0!=a.dist?a:null},r.ClosestEdge=function(n,t,e,i){{var o=n.length-2,a=r._tp,u=a[0],f=a[2],s=a[3];a[4]}u.x=t,u.y=e,null==i&&(i={dist:0,edge:0,point:{x:0,y:0},norm:{x:0,y:0}}),i.dist=1/0;for(var l=0;o>l;l+=2)f.x=n[l],f.y=n[l+1],s.x=n[l+2],s.y=n[l+3],r._pointLineDist(u,f,s,l>>1,i);f.x=s.x,f.y=s.y,s.x=n[0],s.y=n[1],r._pointLineDist(u,f,s,o>>1,i);var y=1/i.dist;return i.norm.x=(t-i.point.x)*y,i.norm.y=(e-i.point.y)*y,i},r._pointLineDist=function(n,t,r,e,i){var o,a,u=n.x,f=n.y,s=t.x,l=t.y,y=r.x,x=r.y,h=u-s,c=f-l,v=y-s,g=x-l,p=h*v+c*g,_=v*v+g*g,P=p/_;0>P||s==y&&l==x?(o=s,a=l):P>1?(o=y,a=x):(o=s+P*v,a=l+P*g);var d=u-o,m=f-a,I=Math.sqrt(d*d+m*m);I<i.dist&&(i.dist=I,i.edge=e,i.point.x=o,i.point.y=a)},r._updateISC=function(n,t,e,i,o,a,u,f){var s=r._P.dist(e,a);if(s<f.dist){var l=1/r._P.dist(i,o),y=-(o.y-i.y)*l,x=(o.x-i.x)*l,h=2*(n*y+t*x);f.dist=s,f.norm.x=y,f.norm.y=x,f.refl.x=-h*y+n,f.refl.y=-h*x+t,f.edge=u}},r._getPoints=function(n,t,r){var e=n.length,i=[];t>r&&(r+=e);for(var o=t;r>=o;o++)i.push(n[o%e]);return i},r._firstWithFlag=function(n,t){for(var r=n.length;;)if(t=(t+1)%r,n[t].flag)return t},r._PointInTriangle=function(n,t,r,e,i,o,a,u){var f=a-r,s=u-e,l=i-r,y=o-e,x=n-r,h=t-e,c=f*f+s*s,v=f*l+s*y,g=f*x+s*h,p=l*l+y*y,_=l*x+y*h,P=1/(c*p-v*v),d=(p*g-v*_)*P,m=(c*_-v*g)*P;return d>=0&&m>=0&&1>d+m},r._RayLineIntersection=function(n,t,e,i,o){var a=n.x-t.x,u=e.x-i.x,f=n.y-t.y,s=e.y-i.y,l=a*s-f*u;if(0==l)return null;var y=n.x*t.y-n.y*t.x,x=e.x*i.y-e.y*i.x,h=o,c=1/l;return h.x=(y*u-a*x)*c,h.y=(y*s-f*x)*c,r._InRect(h,e,i)?f>0&&h.y>n.y||0>f&&h.y<n.y?null:a>0&&h.x>n.x||0>a&&h.x<n.x?null:h:null},r._GetLineIntersection=function(n,t,e,i,o){var a=n.x-t.x,u=e.x-i.x,f=n.y-t.y,s=e.y-i.y,l=a*s-f*u;if(0==l)return null;var y=n.x*t.y-n.y*t.x,x=e.x*i.y-e.y*i.x,h=o;return h.x=(y*u-a*x)/l,h.y=(y*s-f*x)/l,r._InRect(h,n,t)&&r._InRect(h,e,i)?h:null},r._InRect=function(n,t,r){return t.x==r.x?n.y>=Math.min(t.y,r.y)&&n.y<=Math.max(t.y,r.y):t.y==r.y?n.x>=Math.min(t.x,r.x)&&n.x<=Math.max(t.x,r.x):n.x>=Math.min(t.x,r.x)&&n.x<=Math.max(t.x,r.x)&&n.y>=Math.min(t.y,r.y)&&n.y<=Math.max(t.y,r.y)?!0:!1},r._convex=function(n,t,r,e,i,o){return(t-e)*(i-r)+(r-n)*(o-e)>=0},r._P=function(n,t){this.x=n,this.y=t,this.flag=!1},r._P.prototype.toString=function(){return"Point ["+this.x+", "+this.y+"]"},r._P.dist=function(n,t){var r=t.x-n.x,e=t.y-n.y;return Math.sqrt(r*r+e*e)},r._tp=[];for(var e=0;10>e;e++)r._tp.push(new r._P(0,0));t.verticesFromPolygon=function(n){for(var t=n.getVertices(),r=[],e=0;e<t.length;e++){var i=t[e];r.push(i.x,i.y)}return r},t.trianglesFromVertexArray=function(n){for(var r=[],e=0;e<n.length/6;e+=6){new t.Polygon([e,e+1,e+2,e+3,e+4,e+5])}return r},"undefined"!=typeof exports?("undefined"!=typeof module&&module.exports&&(exports=module.exports=t),exports.TRAIL=t):"undefined"!=typeof define&&define.amd?define(t):n.TRAIL=t}).call(this);